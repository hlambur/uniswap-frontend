{"version":3,"sources":["components/OversizedPanel/index.js","assets/images/dropdown-blue.svg","components/AddressInputPanel/index.js","assets/svg/SVGArrowDown.js","components/ContextualInfoNew/index.js","components/TransactionDetails/index.js","components/ExchangePage/index.jsx","assets/images/question.svg"],"names":["Panel","styled","div","theme","concreteGray","PanelTop","PanelBottom","OversizedPanel","hideTop","hideBottom","children","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","d","stroke","SvgDropdownBlue","_ref","svgRef","title","props","width","height","viewBox","fill","ref","ForwardRef","forwardRef","InputPanel","flexColumnNoWrap","transparentize","shadowColor","inputBackground","ContainerRow","error","salmonRed","mercuryGray","InputContainer","LabelRow","flexRowNoWrap","doveGray","LabelContainer","InputRow","Input","input","royalBlue","placeholderGray","AddressInputPanel","initialInput","onChange","onError","t","useTranslation","library","useWeb3Context","useState","setInput","debouncedInput","useDebounce","address","undefined","name","data","setData","setError","useEffect","stale","isAddress","lookupAddress","then","catch","resolveName","type","autoComplete","autoCorrect","autoCapitalize","spellCheck","placeholder","event","value","checksummedInput","SVGArrowDown","SummaryWrapper","SummaryWrapperContainer","Details","ErrorSpan","span","isError","slippageWarning","highSlippageWarning","css","warningYellow","ColoredDropup","rest","ColoredDropdown","ContextualInfo","openDetailsText","closeDetailsText","contextualInfo","allowExpand","dropDownContent","showDetails","setShowDetails","onClick","s","role","aria-label","WARNING_TYPE","freeze","none","emptyInput","invalidEntryBound","riskyEntryHigh","riskyEntryLow","Flex","FlexBetween","SlippageRow","wrap","QuestionWrapper","button","HelpCircleStyled","img","fadeIn","keyframes","Popup","textColor","mediaWidth","upToSmall","FancyButton","chaliceGray","Option","active","white","darken","lighten","OptionLarge","color","BottomError","show","OptionCustom","Bold","LastSummaryText","SlippageSelector","Percent","Faded","TransactionInfo","ValueWrapper","TransactionDetails","activeIndex","setActiveIndex","warningType","setWarningType","inputRef","useRef","showPopup","setPopup","userInput","setUserInput","checkBounds","renderTransactionDetails","onMouseEnter","onMouseLeave","src","question","alt","setFromFixed","setFromCustom","tabIndex","parseInput","toString","current","focus","index","slippage","updateSlippage","setcustomSlippageError","slippageValue","Number","e","some","a","test","newSlippage","numParsed","parseInt","setRawSlippage","setRawTokenSlippage","b","text","ReactGA","category","action","independentField","INPUT","sending","amountFormatter","independentValueParsed","independentDecimals","Math","min","inputSymbol","recipientAddress","dependentValueMinumum","dependentDecimals","outputSymbol","percentSlippageFormatted","dependentValueMaximum","inputError","independentError","inputCurrency","outputCurrency","independentValue","account","slippageWarningText","inputValueParsed","outputValueParsed","renderSummary","OUTPUT","ETH_TO_TOKEN","TOKEN_TO_ETH","TOKEN_TO_TOKEN","ALLOWED_SLIPPAGE_DEFAULT","TOKEN_ALLOWED_SLIPPAGE_DEFAULT","DEADLINE_FROM_NOW","GAS_MARGIN","ethers","utils","bigNumberify","DownArrowBackground","DownArrow","clickable","ExchangeRateWrapper","ExchangeRate","calculateEtherTokenOutputFromInput","inputAmount","inputReserve","outputReserve","inputAmountWithFee","mul","numerator","denominator","add","calculateEtherTokenInputFromOutput","outputAmount","sub","constants","One","getInitialSwapState","dependentValue","swapStateReducer","state","payload","field","currency","newInputCurrency","newOutputCurrency","getExchangeRate","inputValue","inputDecimals","outputValue","outputDecimals","invert","factor","pow","ExchangePage","initialCurrency","addTransaction","useTransactionAdder","rawSlippage","rawTokenSlippage","allowedSlippageBig","tokenAllowedSlippageBig","pageview","window","location","pathname","search","useReducer","swapState","dispatchSwapState","recipient","setRecipient","recipientError","setRecipientError","swapType","getSwapType","useTokenDetails","symbol","decimals","inputExchangeAddress","exchangeAddress","outputExchangeAddress","inputExchangeContract","useExchangeContract","outputExchangeContract","contract","inputAllowance","useAddressAllowance","useExchangeReserves","inputReserveETH","reserveETH","inputReserveToken","reserveToken","outputReserveETH","outputReserveToken","inputBalance","useAddressBalance","outputBalance","inputBalanceFormatted","isInteger","outputBalanceFormatted","setIndependentValueParsed","dependentValueFormatted","inputValueFormatted","outputValueFormatted","setIndependentError","parsedValue","parseUnits","lte","Zero","gte","MaxUint256","Error","token","tokenAllowedSlippage","allowedSlippage","offset","minimum","maximum","lt","gt","calculateSlippageBounds","setInputError","showUnlock","setShowUnlock","inputValueCalculation","amount","calculatedDependentValue","reserveETHFirst","reserveTokenFirst","reserveETHSecond","reserveTokenSecond","intermediateValue","inverted","setInverted","exchangeRate","exchangeRateInverted","marketRate","firstRate","secondRate","getMarketRate","percentSlippage","abs","parseEther","isValid","estimatedText","formatBalance","deadline","ceil","Date","now","estimate","ethToTokenTransferInput","ethToTokenSwapInput","method","args","tokenToEthTransferInput","tokenToEthSwapInput","tokenToTokenTransferInput","tokenToTokenSwapInput","ethToTokenTransferOutput","ethToTokenSwapOutput","tokenToEthTransferOutput","tokenToEthSwapOutput","tokenToTokenTransferOutput","tokenToTokenSwapOutput","estimatedGasLimit","gasLimit","calculateGasMargin","response","customSlippageError","allBalances","useFetchAllBalances","CurrencyInputPanel","description","extraText","extraTextClickHander","valueToSet","onCurrencySelected","onValueChange","selectedTokens","selectedTokenAddress","errorMessage","disableUnlock","disabled","warning","module","exports"],"mappings":"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","file":"static/js/1.759197ff.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst Panel = styled.div`\n  position: relative;\n  background-color: ${({ theme }) => theme.concreteGray};\n  width: calc(100% - 1rem);\n  margin: 0 auto;\n  border-radius: 0.625rem;\n`\n\nconst PanelTop = styled.div`\n  content: '';\n  position: absolute;\n  top: -0.5rem;\n  left: 0;\n  height: 1rem;\n  width: 100%;\n  background-color: ${({ theme }) => theme.concreteGray};\n`\n\nconst PanelBottom = styled.div`\n  position: absolute;\n  top: 80%;\n  left: 0;\n  height: 1rem;\n  width: 100%;\n  background-color: ${({ theme }) => theme.concreteGray};\n`\n\nexport default function OversizedPanel({ hideTop, hideBottom, children }) {\n  return (\n    <Panel>\n      {hideTop || <PanelTop />}\n      {children}\n      {hideBottom || <PanelBottom />}\n    </Panel>\n  )\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M0.97168 1L6.20532 6L11.439 1\",\n  stroke: \"#2F80ED\"\n});\n\nvar SvgDropdownBlue = function SvgDropdownBlue(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 12,\n    height: 7,\n    viewBox: \"0 0 12 7\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), React.createElement(\"title\", null, title), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgDropdownBlue, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/dropdown-blue.b20914ec.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'react-i18next'\nimport { useWeb3Context } from 'web3-react'\nimport { transparentize } from 'polished'\n\nimport { isAddress } from '../../utils'\nimport { useDebounce } from '../../hooks'\n\nconst InputPanel = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap}\n  box-shadow: 0 4px 8px 0 ${({ theme }) => transparentize(0.95, theme.shadowColor)};\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.inputBackground};\n  z-index: 1;\n`\n\nconst ContainerRow = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? theme.salmonRed : theme.mercuryGray)};\n\n  background-color: ${({ theme }) => theme.inputBackground};\n`\n\nconst InputContainer = styled.div`\n  flex: 1;\n`\n\nconst LabelRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: center;\n  color: ${({ theme }) => theme.doveGray};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem;\n`\n\nconst LabelContainer = styled.div`\n  flex: 1 1 auto;\n  width: 0;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`\n\nconst InputRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: center;\n  padding: 0.25rem 0.85rem 0.75rem;\n`\n\nconst Input = styled.input`\n  font-size: 1rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  width: 0;\n  background-color: ${({ theme }) => theme.inputBackground};\n\n  color: ${({ error, theme }) => (error ? theme.salmonRed : theme.royalBlue)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  ::placeholder {\n    color: ${({ theme }) => theme.placeholderGray};\n  }\n`\n\nexport default function AddressInputPanel({ title, initialInput = '', onChange = () => {}, onError = () => {} }) {\n  const { t } = useTranslation()\n\n  const { library } = useWeb3Context()\n\n  const [input, setInput] = useState(initialInput)\n  const debouncedInput = useDebounce(input, 150)\n\n  const [data, setData] = useState({ address: undefined, name: undefined })\n  const [error, setError] = useState(false)\n\n  // keep data and errors in sync\n  useEffect(() => {\n    onChange({ address: data.address, name: data.name })\n  }, [onChange, data.address, data.name])\n  useEffect(() => {\n    onError(error)\n  }, [onError, error])\n\n  // run parser on debounced input\n  useEffect(() => {\n    let stale = false\n\n    if (isAddress(debouncedInput)) {\n      try {\n        library\n          .lookupAddress(debouncedInput)\n          .then(name => {\n            if (!stale) {\n              // if an ENS name exists, set it as the destination\n              if (name) {\n                setInput(name)\n              } else {\n                setData({ address: debouncedInput, name: '' })\n                setError(null)\n              }\n            }\n          })\n          .catch(() => {\n            if (!stale) {\n              setData({ address: debouncedInput, name: '' })\n              setError(null)\n            }\n          })\n      } catch {\n        setData({ address: debouncedInput, name: '' })\n        setError(null)\n      }\n    } else {\n      if (debouncedInput !== '') {\n        try {\n          library\n            .resolveName(debouncedInput)\n            .then(address => {\n              if (!stale) {\n                // if the debounced input name resolves to an address\n                if (address) {\n                  setData({ address: address, name: debouncedInput })\n                  setError(null)\n                } else {\n                  setError(true)\n                }\n              }\n            })\n            .catch(() => {\n              if (!stale) {\n                setError(true)\n              }\n            })\n        } catch {\n          setError(true)\n        }\n      }\n    }\n\n    return () => {\n      stale = true\n    }\n  }, [debouncedInput, library, onChange, onError])\n\n  function onInput(event) {\n    if (data.address !== undefined || data.name !== undefined) {\n      setData({ address: undefined, name: undefined })\n    }\n    if (error !== undefined) {\n      setError()\n    }\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setInput(checksummedInput || input)\n  }\n\n  return (\n    <InputPanel>\n      <ContainerRow error={input !== '' && error}>\n        <InputContainer>\n          <LabelRow>\n            <LabelContainer>\n              <span>{title || t('recipientAddress')}</span>\n            </LabelContainer>\n          </LabelRow>\n          <InputRow>\n            <Input\n              type=\"text\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              spellCheck=\"false\"\n              placeholder=\"0x1234...\"\n              error={input !== '' && error}\n              onChange={onInput}\n              value={input}\n            />\n          </InputRow>\n        </InputContainer>\n      </ContainerRow>\n    </InputPanel>\n  )\n}\n","import React from 'react'\n\nconst SVGArrowDown = props => (\n  <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 9 10\" fill=\"currentColor\" {...props}>\n    <path\n      d=\"M5.298 0H4.24v7.911h-.075L1.256 4.932l-.717.735L4.769 10 9 5.667l-.718-.735-2.908 2.979h-.076V0z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n)\n\nexport default SVGArrowDown\n","import React, { useState } from 'react'\nimport styled, { css } from 'styled-components'\nimport { transparentize } from 'polished'\n\nimport { ReactComponent as Dropup } from '../../assets/images/dropup-blue.svg'\nimport { ReactComponent as Dropdown } from '../../assets/images/dropdown-blue.svg'\n\nconst SummaryWrapper = styled.div`\n  color: ${({ error, theme }) => (error ? theme.salmonRed : theme.doveGray)};\n  font-size: 0.75rem;\n  text-align: center;\n  margin-top: 1rem;\n  padding-top: 1rem;\n`\n\nconst SummaryWrapperContainer = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  color: ${({ theme }) => theme.royalBlue};\n  text-align: center;\n  margin-top: 1rem;\n  padding-top: 1rem;\n  cursor: pointer;\n  align-items: center;\n  justify-content: center;\n  font-size: 0.75rem;\n\n  img {\n    height: 0.75rem;\n    width: 0.75rem;\n  }\n`\n\nconst Details = styled.div`\n  background-color: ${({ theme }) => theme.concreteGray};\n  /* padding: 1.25rem 1.25rem 1rem 1.25rem; */\n  border-radius: 1rem;\n  font-size: 0.75rem;\n  margin: 1rem 0.5rem 0 0.5rem;\n`\n\nconst ErrorSpan = styled.span`\n  margin-right: 12px;\n  font-size: 0.75rem;\n  line-height: 0.75rem;\n\n  color: ${({ isError, theme }) => isError && theme.salmonRed};\n  ${({ slippageWarning, highSlippageWarning, theme }) =>\n    highSlippageWarning\n      ? css`\n          color: ${theme.salmonRed};\n          font-weight: 600;\n        `\n      : slippageWarning &&\n        css`\n          background-color: ${transparentize(0.6, theme.warningYellow)};\n          font-weight: 600;\n          padding: 0.25rem;\n        `}\n`\n\nconst WrappedDropup = ({ isError, highSlippageWarning, ...rest }) => <Dropup {...rest} />\nconst ColoredDropup = styled(WrappedDropup)`\n  path {\n    stroke: ${({ isError, theme }) => (isError ? theme.salmonRed : theme.royalBlue)};\n\n    ${({ highSlippageWarning, theme }) =>\n      highSlippageWarning &&\n      css`\n        stroke: ${theme.salmonRed};\n      `}\n  }\n`\n\nconst WrappedDropdown = ({ isError, highSlippageWarning, ...rest }) => <Dropdown {...rest} />\nconst ColoredDropdown = styled(WrappedDropdown)`\n  path {\n    stroke: ${({ isError, theme }) => (isError ? theme.salmonRed : theme.royalBlue)};\n\n    ${({ highSlippageWarning, theme }) =>\n      highSlippageWarning &&\n      css`\n        stroke: ${theme.salmonRed};\n      `}\n  }\n`\n\nexport default function ContextualInfo({\n  openDetailsText = 'Advanced Details',\n  closeDetailsText = 'Hide Advanced',\n  contextualInfo = '',\n  allowExpand = false,\n  isError = false,\n  slippageWarning,\n  highSlippageWarning,\n  dropDownContent\n}) {\n  const [showDetails, setShowDetails] = useState(false)\n  return !allowExpand ? (\n    <SummaryWrapper>{contextualInfo}</SummaryWrapper>\n  ) : (\n    <>\n      <SummaryWrapperContainer onClick={() => setShowDetails(s => !s)}>\n        <>\n          <ErrorSpan isError={isError} slippageWarning={slippageWarning} highSlippageWarning={highSlippageWarning}>\n            {(slippageWarning || highSlippageWarning) && (\n              <span role=\"img\" aria-label=\"warning\">\n                ⚠️\n              </span>\n            )}\n            {contextualInfo ? contextualInfo : showDetails ? closeDetailsText : openDetailsText}\n          </ErrorSpan>\n          {showDetails ? (\n            <ColoredDropup isError={isError} highSlippageWarning={highSlippageWarning} />\n          ) : (\n            <ColoredDropdown isError={isError} highSlippageWarning={highSlippageWarning} />\n          )}\n        </>\n      </SummaryWrapperContainer>\n      {showDetails && <Details>{dropDownContent()}</Details>}\n    </>\n  )\n}\n","import React, { useState, useEffect, useRef } from 'react'\nimport ReactGA from 'react-ga'\nimport { useTranslation } from 'react-i18next'\nimport styled, { css, keyframes } from 'styled-components'\nimport { darken, lighten } from 'polished'\nimport { isAddress, amountFormatter } from '../../utils'\nimport { useDebounce } from '../../hooks'\n\nimport question from '../../assets/images/question.svg'\n\nimport NewContextualInfo from '../../components/ContextualInfoNew'\n\nconst WARNING_TYPE = Object.freeze({\n  none: 'none',\n  emptyInput: 'emptyInput',\n  invalidEntryBound: 'invalidEntryBound',\n  riskyEntryHigh: 'riskyEntryHigh',\n  riskyEntryLow: 'riskyEntryLow'\n})\n\nconst Flex = styled.div`\n  display: flex;\n  justify-content: center;\n`\n\nconst FlexBetween = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 100%;\n`\n\nconst WrappedSlippageRow = ({ wrap, ...rest }) => <Flex {...rest} />\nconst SlippageRow = styled(WrappedSlippageRow)`\n  position: relative;\n  flex-wrap: ${({ wrap }) => wrap && 'wrap'};\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n  width: 100%;\n  padding: 0;\n  padding-top: ${({ wrap }) => wrap && '0.25rem'};\n`\n\nconst QuestionWrapper = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0;\n  padding: 0;\n  margin-left: 0.4rem;\n  padding: 0.2rem;\n  border: none;\n  background: none;\n  outline: none;\n  cursor: default;\n  border-radius: 36px;\n\n  :hover,\n  :focus {\n    opacity: 0.7;\n  }\n`\n\nconst HelpCircleStyled = styled.img`\n  height: 18px;\n  width: 18px;\n`\n\nconst fadeIn = keyframes`\n  from {\n    opacity : 0;\n  }\n\n  to {\n    opacity : 1;\n  }\n`\n\nconst Popup = styled(Flex)`\n  position: absolute;\n  width: 228px;\n  left: -78px;\n  top: -124px;\n  flex-direction: column;\n  align-items: center;\n  padding: 0.6rem 1rem;\n  line-height: 150%;\n  background: ${({ theme }) => theme.inputBackground};\n  border: 1px solid ${({ theme }) => theme.mercuryGray};\n\n  border-radius: 8px;\n\n  animation: ${fadeIn} 0.15s linear;\n\n  color: ${({ theme }) => theme.textColor};\n  font-style: italic;\n\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    left: -20px;\n  `}\n`\n\nconst FancyButton = styled.button`\n  color: ${({ theme }) => theme.textColor};\n  align-items: center;\n  min-width: 55px;\n  height: 2rem;\n  border-radius: 36px;\n  font-size: 12px;\n  border: 1px solid ${({ theme }) => theme.mercuryGray};\n  outline: none;\n  background: ${({ theme }) => theme.inputBackground};\n\n  :hover {\n    cursor: inherit;\n    border: 1px solid ${({ theme }) => theme.chaliceGray};\n  }\n  :focus {\n    border: 1px solid ${({ theme }) => theme.royalBlue};\n  }\n`\n\nconst Option = styled(FancyButton)`\n  margin-right: 8px;\n  margin-top: 6px;\n\n  :hover {\n    cursor: pointer;\n  }\n\n  ${({ active, theme }) =>\n    active &&\n    css`\n      background-color: ${({ theme }) => theme.royalBlue};\n      color: ${({ theme }) => theme.white};\n      border: none;\n\n      :hover {\n        border: none;\n        box-shadow: none;\n        background-color: ${({ theme }) => darken(0.05, theme.royalBlue)};\n      }\n\n      :focus {\n        border: none;\n        box-shadow: none;\n        background-color: ${({ theme }) => lighten(0.05, theme.royalBlue)};\n      }\n\n      :active {\n        background-color: ${({ theme }) => darken(0.05, theme.royalBlue)};\n      }\n\n      :hover:focus {\n        background-color: ${({ theme }) => theme.royalBlue};\n      }\n      :hover:focus:active {\n        background-color: ${({ theme }) => darken(0.05, theme.royalBlue)};\n      }\n    `}\n`\n\nconst OptionLarge = styled(Option)`\n  width: 120px;\n`\n\nconst Input = styled.input`\n  background: ${({ theme }) => theme.inputBackground};\n  flex-grow: 1;\n  font-size: 12px;\n\n  outline: none;\n  box-sizing: border-box;\n\n  &::-webkit-outer-spin-button,\n  &::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  cursor: inherit;\n\n  color: ${({ theme }) => theme.doveGray};\n  text-align: left;\n  ${({ active }) =>\n    active &&\n    css`\n      color: initial;\n      cursor: initial;\n      text-align: right;\n    `}\n\n  ${({ placeholder }) =>\n    placeholder !== 'Custom' &&\n    css`\n      text-align: right;\n      color: ${({ theme }) => theme.textColor};\n    `}\n\n  ${({ color }) =>\n    color === 'red' &&\n    css`\n      color: ${({ theme }) => theme.salmonRed};\n    `}\n`\n\nconst BottomError = styled.div`\n  ${({ show }) =>\n    show &&\n    css`\n      padding-top: 12px;\n    `}\n  color: ${({ theme }) => theme.doveGray};\n  ${({ color }) =>\n    color === 'red' &&\n    css`\n      color: ${({ theme }) => theme.salmonRed};\n    `}\n`\n\nconst OptionCustom = styled(FancyButton)`\n  height: 2rem;\n  position: relative;\n  width: 120px;\n  margin-top: 6px;\n  padding: 0 0.75rem;\n\n  ${({ active }) =>\n    active &&\n    css`\n      border: 1px solid ${({ theme }) => theme.royalBlue};\n      :hover {\n        border: 1px solid ${({ theme }) => darken(0.1, theme.royalBlue)};\n      }\n    `}\n\n  ${({ color }) =>\n    color === 'red' &&\n    css`\n      border: 1px solid ${({ theme }) => theme.salmonRed};\n    `}\n\n  input {\n    width: 100%;\n    height: 100%;\n    border: 0px;\n    border-radius: 2rem;\n  }\n`\n\nconst Bold = styled.span`\n  font-weight: 500;\n`\n\nconst LastSummaryText = styled.div`\n  padding-top: 0.5rem;\n`\n\nconst SlippageSelector = styled.div`\n  background-color: ${({ theme }) => darken(0.04, theme.concreteGray)};\n  padding: 1rem 1.25rem 1rem 1.25rem;\n  border-radius: 12px;\n`\n\nconst Percent = styled.div`\n  color: inherit;\n  font-size: 0, 8rem;\n  flex-grow: 0;\n\n  ${({ color, theme }) =>\n    (color === 'faded' &&\n      css`\n        color: ${theme.doveGray};\n      `) ||\n    (color === 'red' &&\n      css`\n        color: ${theme.salmonRed};\n      `)};\n`\n\nconst Faded = styled.span`\n  opacity: 0.7;\n`\n\nconst TransactionInfo = styled.div`\n  padding: 1.25rem 1.25rem 1rem 1.25rem;\n`\n\nconst ValueWrapper = styled.span`\n  padding: 0.125rem 0.3rem 0.1rem 0.3rem;\n  background-color: ${({ theme }) => darken(0.04, theme.concreteGray)};\n  border-radius: 12px;\n  font-variant: tabular-nums;\n`\n\nexport default function TransactionDetails(props) {\n  const { t } = useTranslation()\n\n  const [activeIndex, setActiveIndex] = useState(3)\n\n  const [warningType, setWarningType] = useState(WARNING_TYPE.none)\n\n  const inputRef = useRef()\n\n  const [showPopup, setPopup] = useState(false)\n\n  const [userInput, setUserInput] = useState('')\n  const debouncedInput = useDebounce(userInput, 150)\n\n  useEffect(() => {\n    if (activeIndex === 4) {\n      checkBounds(debouncedInput)\n    }\n  })\n\n  function renderSummary() {\n    let contextualInfo = ''\n    let isError = false\n\n    if (props.inputError || props.independentError) {\n      contextualInfo = props.inputError || props.independentError\n      isError = true\n    } else if (!props.inputCurrency || !props.outputCurrency) {\n      contextualInfo = t('selectTokenCont')\n    } else if (!props.independentValue) {\n      contextualInfo = t('enterValueCont')\n    } else if (props.sending && !props.recipientAddress) {\n      contextualInfo = t('noRecipient')\n    } else if (props.sending && !isAddress(props.recipientAddress)) {\n      contextualInfo = t('invalidRecipient')\n    } else if (!props.account) {\n      contextualInfo = t('noWallet')\n      isError = true\n    }\n\n    const slippageWarningText = props.highSlippageWarning\n      ? t('highSlippageWarning')\n      : props.slippageWarning\n      ? t('slippageWarning')\n      : ''\n\n    return (\n      <NewContextualInfo\n        openDetailsText={t('transactionDetails')}\n        closeDetailsText={t('hideDetails')}\n        contextualInfo={contextualInfo ? contextualInfo : slippageWarningText}\n        allowExpand={\n          !!(\n            props.inputCurrency &&\n            props.outputCurrency &&\n            props.inputValueParsed &&\n            props.outputValueParsed &&\n            (props.sending ? props.recipientAddress : true)\n          )\n        }\n        isError={isError}\n        slippageWarning={props.slippageWarning && !contextualInfo}\n        highSlippageWarning={props.highSlippageWarning && !contextualInfo}\n        renderTransactionDetails={renderTransactionDetails}\n        dropDownContent={dropDownContent}\n      />\n    )\n  }\n\n  const dropDownContent = () => {\n    return (\n      <>\n        {renderTransactionDetails()}\n        <SlippageSelector>\n          <SlippageRow>\n            Limit additional price slippage\n            <QuestionWrapper\n              onClick={() => {\n                setPopup(!showPopup)\n              }}\n              onMouseEnter={() => {\n                setPopup(true)\n              }}\n              onMouseLeave={() => {\n                setPopup(false)\n              }}\n            >\n              <HelpCircleStyled src={question} alt=\"popup\" />\n            </QuestionWrapper>\n            {showPopup ? (\n              <Popup>\n                Lowering this limit decreases your risk of frontrunning. However, this makes it more likely that your\n                transaction will fail due to normal price movements.\n              </Popup>\n            ) : (\n              ''\n            )}\n          </SlippageRow>\n          <SlippageRow wrap>\n            <Option\n              onClick={() => {\n                setFromFixed(1, 0.1)\n              }}\n              active={activeIndex === 1}\n            >\n              0.1%\n            </Option>\n            <Option\n              onClick={() => {\n                setFromFixed(2, 0.5)\n              }}\n              active={activeIndex === 2}\n            >\n              0.5%\n            </Option>\n            <OptionLarge\n              onClick={() => {\n                setFromFixed(3, 1)\n              }}\n              active={activeIndex === 3}\n            >\n              1% <Faded>(suggested)</Faded>\n            </OptionLarge>\n            <OptionCustom\n              active={activeIndex === 4}\n              color={\n                warningType === WARNING_TYPE.emptyInput\n                  ? ''\n                  : warningType !== WARNING_TYPE.none && warningType !== WARNING_TYPE.riskyEntryLow\n                  ? 'red'\n                  : ''\n              }\n              onClick={() => {\n                setFromCustom()\n              }}\n            >\n              <FlexBetween>\n                {!(warningType === WARNING_TYPE.none || warningType === WARNING_TYPE.emptyInput) && (\n                  <span role=\"img\" aria-label=\"warning\">\n                    ⚠️\n                  </span>\n                )}\n                <Input\n                  tabIndex={-1}\n                  ref={inputRef}\n                  active={activeIndex === 4}\n                  placeholder={\n                    activeIndex === 4\n                      ? !!userInput\n                        ? ''\n                        : '0'\n                      : activeIndex !== 4 && userInput !== ''\n                      ? userInput\n                      : 'Custom'\n                  }\n                  value={activeIndex === 4 ? userInput : ''}\n                  onChange={parseInput}\n                  color={\n                    warningType === WARNING_TYPE.emptyInput\n                      ? ''\n                      : warningType !== WARNING_TYPE.none && warningType !== WARNING_TYPE.riskyEntryLow\n                      ? 'red'\n                      : ''\n                  }\n                />\n                <Percent\n                  color={\n                    activeIndex !== 4\n                      ? 'faded'\n                      : warningType === WARNING_TYPE.riskyEntryHigh || warningType === WARNING_TYPE.invalidEntryBound\n                      ? 'red'\n                      : ''\n                  }\n                >\n                  %\n                </Percent>\n              </FlexBetween>\n            </OptionCustom>\n          </SlippageRow>\n          <SlippageRow>\n            <BottomError\n              show={activeIndex === 4}\n              color={\n                warningType === WARNING_TYPE.emptyInput\n                  ? ''\n                  : warningType !== WARNING_TYPE.none && warningType !== WARNING_TYPE.riskyEntryLow\n                  ? 'red'\n                  : ''\n              }\n            >\n              {activeIndex === 4 && warningType.toString() === 'none' && 'Custom slippage value'}\n              {warningType === WARNING_TYPE.emptyInput && 'Enter a slippage percentage'}\n              {warningType === WARNING_TYPE.invalidEntryBound && 'Please select a value no greater than 50%'}\n              {warningType === WARNING_TYPE.riskyEntryHigh && 'Your transaction may be frontrun'}\n              {warningType === WARNING_TYPE.riskyEntryLow && 'Your transaction may fail'}\n            </BottomError>\n          </SlippageRow>\n        </SlippageSelector>\n      </>\n    )\n  }\n\n  const setFromCustom = () => {\n    setActiveIndex(4)\n    inputRef.current.focus()\n    // if there's a value, evaluate the bounds\n    checkBounds(debouncedInput)\n  }\n\n  // used for slippage presets\n  const setFromFixed = (index, slippage) => {\n    // update slippage in parent, reset errors and input state\n    updateSlippage(slippage)\n    setWarningType(WARNING_TYPE.none)\n    setActiveIndex(index)\n    props.setcustomSlippageError('valid`')\n  }\n\n  const checkBounds = slippageValue => {\n    setWarningType(WARNING_TYPE.none)\n    props.setcustomSlippageError('valid')\n\n    if (slippageValue === '' || slippageValue === '.') {\n      props.setcustomSlippageError('invalid')\n      return setWarningType(WARNING_TYPE.emptyInput)\n    }\n\n    // check bounds and set errors\n    if (Number(slippageValue) < 0 || Number(slippageValue) > 50) {\n      props.setcustomSlippageError('invalid')\n      return setWarningType(WARNING_TYPE.invalidEntryBound)\n    }\n    if (Number(slippageValue) >= 0 && Number(slippageValue) < 0.1) {\n      props.setcustomSlippageError('valid')\n      setWarningType(WARNING_TYPE.riskyEntryLow)\n    }\n    if (Number(slippageValue) > 5) {\n      props.setcustomSlippageError('warning')\n      setWarningType(WARNING_TYPE.riskyEntryHigh)\n    }\n    //update the actual slippage value in parent\n    updateSlippage(Number(slippageValue))\n  }\n\n  // check that the theyve entered number and correct decimal\n  const parseInput = e => {\n    let input = e.target.value\n\n    // restrict to 2 decimal places\n    let acceptableValues = [/^$/, /^\\d{1,2}$/, /^\\d{0,2}\\.\\d{0,2}$/]\n    // if its within accepted decimal limit, update the input state\n    if (acceptableValues.some(a => a.test(input))) {\n      setUserInput(input)\n    }\n  }\n\n  const updateSlippage = newSlippage => {\n    // round to 2 decimals to prevent ethers error\n    let numParsed = parseInt(newSlippage * 100)\n\n    // set both slippage values in parents\n    props.setRawSlippage(numParsed)\n    props.setRawTokenSlippage(numParsed)\n  }\n\n  const b = text => <Bold>{text}</Bold>\n\n  const renderTransactionDetails = () => {\n    ReactGA.event({\n      category: 'TransactionDetail',\n      action: 'Open'\n    })\n\n    if (props.independentField === props.INPUT) {\n      return props.sending ? (\n        <TransactionInfo>\n          <div>\n            {t('youAreSelling')}{' '}\n            <ValueWrapper>\n              {b(\n                `${amountFormatter(\n                  props.independentValueParsed,\n                  props.independentDecimals,\n                  Math.min(4, props.independentDecimals)\n                )} ${props.inputSymbol}`\n              )}\n            </ValueWrapper>\n          </div>\n          <LastSummaryText>\n            {b(props.recipientAddress)} {t('willReceive')}{' '}\n            <ValueWrapper>\n              {b(\n                `${amountFormatter(\n                  props.dependentValueMinumum,\n                  props.dependentDecimals,\n                  Math.min(4, props.dependentDecimals)\n                )} ${props.outputSymbol}`\n              )}\n            </ValueWrapper>{' '}\n          </LastSummaryText>\n          <LastSummaryText>\n            {t('priceChange')} <ValueWrapper>{b(`${props.percentSlippageFormatted}%`)}</ValueWrapper>\n          </LastSummaryText>\n        </TransactionInfo>\n      ) : (\n        <TransactionInfo>\n          <div>\n            {t('youAreSelling')}{' '}\n            <ValueWrapper>\n              {b(\n                `${amountFormatter(\n                  props.independentValueParsed,\n                  props.independentDecimals,\n                  Math.min(4, props.independentDecimals)\n                )} ${props.inputSymbol}`\n              )}\n            </ValueWrapper>{' '}\n            {t('forAtLeast')}\n            <ValueWrapper>\n              {b(\n                `${amountFormatter(\n                  props.dependentValueMinumum,\n                  props.dependentDecimals,\n                  Math.min(4, props.dependentDecimals)\n                )} ${props.outputSymbol}`\n              )}\n            </ValueWrapper>\n          </div>\n          <LastSummaryText>\n            {t('priceChange')} <ValueWrapper>{b(`${props.percentSlippageFormatted}%`)}</ValueWrapper>\n          </LastSummaryText>\n        </TransactionInfo>\n      )\n    } else {\n      return props.sending ? (\n        <TransactionInfo>\n          <div>\n            {t('youAreSending')}{' '}\n            <ValueWrapper>\n              {b(\n                `${amountFormatter(\n                  props.independentValueParsed,\n                  props.independentDecimals,\n                  Math.min(4, props.independentDecimals)\n                )} ${props.outputSymbol}`\n              )}\n            </ValueWrapper>{' '}\n            {t('to')} {b(props.recipientAddress)} {t('forAtMost')}{' '}\n            <ValueWrapper>\n              {b(\n                `${amountFormatter(\n                  props.dependentValueMaximum,\n                  props.dependentDecimals,\n                  Math.min(4, props.dependentDecimals)\n                )} ${props.inputSymbol}`\n              )}\n            </ValueWrapper>{' '}\n          </div>\n          <LastSummaryText>\n            {t('priceChange')} <ValueWrapper>{b(`${props.percentSlippageFormatted}%`)}</ValueWrapper>\n          </LastSummaryText>\n        </TransactionInfo>\n      ) : (\n        <TransactionInfo>\n          {t('youAreBuying')}{' '}\n          <ValueWrapper>\n            {b(\n              `${amountFormatter(\n                props.independentValueParsed,\n                props.independentDecimals,\n                Math.min(4, props.independentDecimals)\n              )} ${props.outputSymbol}`\n            )}\n          </ValueWrapper>{' '}\n          {t('forAtMost')}{' '}\n          <ValueWrapper>\n            {b(\n              `${amountFormatter(\n                props.dependentValueMaximum,\n                props.dependentDecimals,\n                Math.min(4, props.dependentDecimals)\n              )} ${props.inputSymbol}`\n            )}\n          </ValueWrapper>{' '}\n          <LastSummaryText>\n            {t('priceChange')} <ValueWrapper>{b(`${props.percentSlippageFormatted}%`)}</ValueWrapper>\n          </LastSummaryText>\n        </TransactionInfo>\n      )\n    }\n  }\n  return <>{renderSummary()}</>\n}\n","import React, { useState, useReducer, useEffect } from 'react'\nimport ReactGA from 'react-ga'\n\nimport { useTranslation } from 'react-i18next'\nimport { useWeb3Context } from 'web3-react'\n\nimport { ethers } from 'ethers'\nimport styled from 'styled-components'\n\nimport { Button } from '../../theme'\nimport CurrencyInputPanel from '../CurrencyInputPanel'\nimport AddressInputPanel from '../AddressInputPanel'\nimport OversizedPanel from '../OversizedPanel'\nimport TransactionDetails from '../TransactionDetails'\nimport ArrowDown from '../../assets/svg/SVGArrowDown'\nimport { amountFormatter, calculateGasMargin } from '../../utils'\nimport { useExchangeContract } from '../../hooks'\nimport { useTokenDetails } from '../../contexts/Tokens'\nimport { useTransactionAdder } from '../../contexts/Transactions'\nimport { useAddressBalance, useExchangeReserves } from '../../contexts/Balances'\nimport { useFetchAllBalances } from '../../contexts/AllBalances'\nimport { useAddressAllowance } from '../../contexts/Allowances'\n\nconst INPUT = 0\nconst OUTPUT = 1\n\nconst ETH_TO_TOKEN = 0\nconst TOKEN_TO_ETH = 1\nconst TOKEN_TO_TOKEN = 2\n\n// denominated in bips\nconst ALLOWED_SLIPPAGE_DEFAULT = 100\nconst TOKEN_ALLOWED_SLIPPAGE_DEFAULT = 100\n\n// 15 minutes, denominated in seconds\nconst DEADLINE_FROM_NOW = 60 * 15\n\n// % above the calculated gas cost that we actually send, denominated in bips\nconst GAS_MARGIN = ethers.utils.bigNumberify(1000)\n\nconst DownArrowBackground = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  justify-content: center;\n  align-items: center;\n`\n\nconst WrappedArrowDown = ({ clickable, active, ...rest }) => <ArrowDown {...rest} />\nconst DownArrow = styled(WrappedArrowDown)`\n  color: ${({ theme, active }) => (active ? theme.royalBlue : theme.chaliceGray)};\n  width: 0.625rem;\n  height: 0.625rem;\n  position: relative;\n  padding: 0.875rem;\n  cursor: ${({ clickable }) => clickable && 'pointer'};\n`\n\nconst ExchangeRateWrapper = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n  color: ${({ theme }) => theme.doveGray};\n  font-size: 0.75rem;\n  padding: 0.5rem 1rem;\n`\n\nconst ExchangeRate = styled.span`\n  flex: 1 1 auto;\n  width: 0;\n  color: ${({ theme }) => theme.doveGray};\n`\n\nconst Flex = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 2rem;\n\n  button {\n    max-width: 20rem;\n  }\n`\n\nfunction calculateSlippageBounds(value, token = false, tokenAllowedSlippage, allowedSlippage) {\n  if (value) {\n    const offset = value.mul(token ? tokenAllowedSlippage : allowedSlippage).div(ethers.utils.bigNumberify(10000))\n    const minimum = value.sub(offset)\n    const maximum = value.add(offset)\n    return {\n      minimum: minimum.lt(ethers.constants.Zero) ? ethers.constants.Zero : minimum,\n      maximum: maximum.gt(ethers.constants.MaxUint256) ? ethers.constants.MaxUint256 : maximum\n    }\n  } else {\n    return {}\n  }\n}\n\nfunction getSwapType(inputCurrency, outputCurrency) {\n  if (!inputCurrency || !outputCurrency) {\n    return null\n  } else if (inputCurrency === 'ETH') {\n    return ETH_TO_TOKEN\n  } else if (outputCurrency === 'ETH') {\n    return TOKEN_TO_ETH\n  } else {\n    return TOKEN_TO_TOKEN\n  }\n}\n\n// this mocks the getInputPrice function, and calculates the required output\nfunction calculateEtherTokenOutputFromInput(inputAmount, inputReserve, outputReserve) {\n  const inputAmountWithFee = inputAmount.mul(ethers.utils.bigNumberify(997))\n  const numerator = inputAmountWithFee.mul(outputReserve)\n  const denominator = inputReserve.mul(ethers.utils.bigNumberify(1000)).add(inputAmountWithFee)\n  return numerator.div(denominator)\n}\n\n// this mocks the getOutputPrice function, and calculates the required input\nfunction calculateEtherTokenInputFromOutput(outputAmount, inputReserve, outputReserve) {\n  const numerator = inputReserve.mul(outputAmount).mul(ethers.utils.bigNumberify(1000))\n  const denominator = outputReserve.sub(outputAmount).mul(ethers.utils.bigNumberify(997))\n  return numerator.div(denominator).add(ethers.constants.One)\n}\n\nfunction getInitialSwapState(outputCurrency) {\n  return {\n    independentValue: '', // this is a user input\n    dependentValue: '', // this is a calculated number\n    independentField: INPUT,\n    inputCurrency: 'ETH',\n    outputCurrency: outputCurrency ? outputCurrency : ''\n  }\n}\n\nfunction swapStateReducer(state, action) {\n  switch (action.type) {\n    case 'FLIP_INDEPENDENT': {\n      const { independentField, inputCurrency, outputCurrency } = state\n      return {\n        ...state,\n        dependentValue: '',\n        independentField: independentField === INPUT ? OUTPUT : INPUT,\n        inputCurrency: outputCurrency,\n        outputCurrency: inputCurrency\n      }\n    }\n    case 'SELECT_CURRENCY': {\n      const { inputCurrency, outputCurrency } = state\n      const { field, currency } = action.payload\n\n      const newInputCurrency = field === INPUT ? currency : inputCurrency\n      const newOutputCurrency = field === OUTPUT ? currency : outputCurrency\n\n      if (newInputCurrency === newOutputCurrency) {\n        return {\n          ...state,\n          inputCurrency: field === INPUT ? currency : '',\n          outputCurrency: field === OUTPUT ? currency : ''\n        }\n      } else {\n        return {\n          ...state,\n          inputCurrency: newInputCurrency,\n          outputCurrency: newOutputCurrency\n        }\n      }\n    }\n    case 'UPDATE_INDEPENDENT': {\n      const { field, value } = action.payload\n      const { dependentValue, independentValue } = state\n      return {\n        ...state,\n        independentValue: value,\n        dependentValue: value === independentValue ? dependentValue : '',\n        independentField: field\n      }\n    }\n    case 'UPDATE_DEPENDENT': {\n      return {\n        ...state,\n        dependentValue: action.payload\n      }\n    }\n    default: {\n      return getInitialSwapState()\n    }\n  }\n}\n\nfunction getExchangeRate(inputValue, inputDecimals, outputValue, outputDecimals, invert = false) {\n  try {\n    if (\n      inputValue &&\n      (inputDecimals || inputDecimals === 0) &&\n      outputValue &&\n      (outputDecimals || outputDecimals === 0)\n    ) {\n      const factor = ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18))\n\n      if (invert) {\n        return inputValue\n          .mul(factor)\n          .div(outputValue)\n          .mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(outputDecimals)))\n          .div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(inputDecimals)))\n      } else {\n        return outputValue\n          .mul(factor)\n          .div(inputValue)\n          .mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(inputDecimals)))\n          .div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(outputDecimals)))\n      }\n    }\n  } catch {}\n}\n\nfunction getMarketRate(\n  swapType,\n  inputReserveETH,\n  inputReserveToken,\n  inputDecimals,\n  outputReserveETH,\n  outputReserveToken,\n  outputDecimals,\n  invert = false\n) {\n  if (swapType === ETH_TO_TOKEN) {\n    return getExchangeRate(outputReserveETH, 18, outputReserveToken, outputDecimals, invert)\n  } else if (swapType === TOKEN_TO_ETH) {\n    return getExchangeRate(inputReserveToken, inputDecimals, inputReserveETH, 18, invert)\n  } else if (swapType === TOKEN_TO_TOKEN) {\n    const factor = ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18))\n    const firstRate = getExchangeRate(inputReserveToken, inputDecimals, inputReserveETH, 18)\n    const secondRate = getExchangeRate(outputReserveETH, 18, outputReserveToken, outputDecimals)\n    try {\n      return !!(firstRate && secondRate) ? firstRate.mul(secondRate).div(factor) : undefined\n    } catch {}\n  }\n}\n\nexport default function ExchangePage({ initialCurrency, sending }) {\n  const { t } = useTranslation()\n  const { account } = useWeb3Context()\n\n  const addTransaction = useTransactionAdder()\n\n  const [rawSlippage, setRawSlippage] = useState(ALLOWED_SLIPPAGE_DEFAULT)\n  const [rawTokenSlippage, setRawTokenSlippage] = useState(TOKEN_ALLOWED_SLIPPAGE_DEFAULT)\n\n  const allowedSlippageBig = ethers.utils.bigNumberify(rawSlippage)\n  const tokenAllowedSlippageBig = ethers.utils.bigNumberify(rawTokenSlippage)\n\n  // analytics\n  useEffect(() => {\n    ReactGA.pageview(window.location.pathname + window.location.search)\n  }, [])\n\n  // core swap state\n  const [swapState, dispatchSwapState] = useReducer(swapStateReducer, initialCurrency, getInitialSwapState)\n\n  const { independentValue, dependentValue, independentField, inputCurrency, outputCurrency } = swapState\n\n  const [recipient, setRecipient] = useState({ address: '', name: '' })\n  const [recipientError, setRecipientError] = useState()\n\n  // get swap type from the currency types\n  const swapType = getSwapType(inputCurrency, outputCurrency)\n\n  // get decimals and exchange address for each of the currency types\n  const { symbol: inputSymbol, decimals: inputDecimals, exchangeAddress: inputExchangeAddress } = useTokenDetails(\n    inputCurrency\n  )\n  const { symbol: outputSymbol, decimals: outputDecimals, exchangeAddress: outputExchangeAddress } = useTokenDetails(\n    outputCurrency\n  )\n\n  const inputExchangeContract = useExchangeContract(inputExchangeAddress)\n  const outputExchangeContract = useExchangeContract(outputExchangeAddress)\n  const contract = swapType === ETH_TO_TOKEN ? outputExchangeContract : inputExchangeContract\n\n  // get input allowance\n  const inputAllowance = useAddressAllowance(account, inputCurrency, inputExchangeAddress)\n\n  // fetch reserves for each of the currency types\n  const { reserveETH: inputReserveETH, reserveToken: inputReserveToken } = useExchangeReserves(inputCurrency)\n  const { reserveETH: outputReserveETH, reserveToken: outputReserveToken } = useExchangeReserves(outputCurrency)\n\n  // get balances for each of the currency types\n  const inputBalance = useAddressBalance(account, inputCurrency)\n  const outputBalance = useAddressBalance(account, outputCurrency)\n  const inputBalanceFormatted = !!(inputBalance && Number.isInteger(inputDecimals))\n    ? amountFormatter(inputBalance, inputDecimals, Math.min(4, inputDecimals))\n    : ''\n  const outputBalanceFormatted = !!(outputBalance && Number.isInteger(outputDecimals))\n    ? amountFormatter(outputBalance, outputDecimals, Math.min(4, outputDecimals))\n    : ''\n\n  // compute useful transforms of the data above\n  const independentDecimals = independentField === INPUT ? inputDecimals : outputDecimals\n  const dependentDecimals = independentField === OUTPUT ? inputDecimals : outputDecimals\n\n  // declare/get parsed and formatted versions of input/output values\n  const [independentValueParsed, setIndependentValueParsed] = useState()\n  const dependentValueFormatted = !!(dependentValue && (dependentDecimals || dependentDecimals === 0))\n    ? amountFormatter(dependentValue, dependentDecimals, Math.min(4, dependentDecimals), false)\n    : ''\n  const inputValueParsed = independentField === INPUT ? independentValueParsed : dependentValue\n  const inputValueFormatted = independentField === INPUT ? independentValue : dependentValueFormatted\n  const outputValueParsed = independentField === OUTPUT ? independentValueParsed : dependentValue\n  const outputValueFormatted = independentField === OUTPUT ? independentValue : dependentValueFormatted\n\n  // validate + parse independent value\n  const [independentError, setIndependentError] = useState()\n  useEffect(() => {\n    if (independentValue && (independentDecimals || independentDecimals === 0)) {\n      try {\n        const parsedValue = ethers.utils.parseUnits(independentValue, independentDecimals)\n\n        if (parsedValue.lte(ethers.constants.Zero) || parsedValue.gte(ethers.constants.MaxUint256)) {\n          throw Error()\n        } else {\n          setIndependentValueParsed(parsedValue)\n          setIndependentError(null)\n        }\n      } catch {\n        setIndependentError(t('inputNotValid'))\n      }\n\n      return () => {\n        setIndependentValueParsed()\n        setIndependentError()\n      }\n    }\n  }, [independentValue, independentDecimals, t])\n\n  // calculate slippage from target rate\n  const { minimum: dependentValueMinumum, maximum: dependentValueMaximum } = calculateSlippageBounds(\n    dependentValue,\n    swapType === TOKEN_TO_TOKEN,\n    tokenAllowedSlippageBig,\n    allowedSlippageBig\n  )\n\n  // validate input allowance + balance\n  const [inputError, setInputError] = useState()\n  const [showUnlock, setShowUnlock] = useState(false)\n  useEffect(() => {\n    const inputValueCalculation = independentField === INPUT ? independentValueParsed : dependentValueMaximum\n    if (inputBalance && (inputAllowance || inputCurrency === 'ETH') && inputValueCalculation) {\n      if (inputBalance.lt(inputValueCalculation)) {\n        setInputError(t('insufficientBalance'))\n      } else if (inputCurrency !== 'ETH' && inputAllowance.lt(inputValueCalculation)) {\n        setInputError(t('unlockTokenCont'))\n        setShowUnlock(true)\n      } else {\n        setInputError(null)\n        setShowUnlock(false)\n      }\n\n      return () => {\n        setInputError()\n        setShowUnlock(false)\n      }\n    }\n  }, [independentField, independentValueParsed, dependentValueMaximum, inputBalance, inputCurrency, inputAllowance, t])\n\n  // calculate dependent value\n  useEffect(() => {\n    const amount = independentValueParsed\n\n    if (swapType === ETH_TO_TOKEN) {\n      const reserveETH = outputReserveETH\n      const reserveToken = outputReserveToken\n\n      if (amount && reserveETH && reserveToken) {\n        try {\n          const calculatedDependentValue =\n            independentField === INPUT\n              ? calculateEtherTokenOutputFromInput(amount, reserveETH, reserveToken)\n              : calculateEtherTokenInputFromOutput(amount, reserveETH, reserveToken)\n\n          if (calculatedDependentValue.lte(ethers.constants.Zero)) {\n            throw Error()\n          }\n\n          dispatchSwapState({ type: 'UPDATE_DEPENDENT', payload: calculatedDependentValue })\n        } catch {\n          setIndependentError(t('insufficientLiquidity'))\n        }\n        return () => {\n          dispatchSwapState({ type: 'UPDATE_DEPENDENT', payload: '' })\n        }\n      }\n    } else if (swapType === TOKEN_TO_ETH) {\n      const reserveETH = inputReserveETH\n      const reserveToken = inputReserveToken\n\n      if (amount && reserveETH && reserveToken) {\n        try {\n          const calculatedDependentValue =\n            independentField === INPUT\n              ? calculateEtherTokenOutputFromInput(amount, reserveToken, reserveETH)\n              : calculateEtherTokenInputFromOutput(amount, reserveToken, reserveETH)\n\n          if (calculatedDependentValue.lte(ethers.constants.Zero)) {\n            throw Error()\n          }\n\n          dispatchSwapState({ type: 'UPDATE_DEPENDENT', payload: calculatedDependentValue })\n        } catch {\n          setIndependentError(t('insufficientLiquidity'))\n        }\n        return () => {\n          dispatchSwapState({ type: 'UPDATE_DEPENDENT', payload: '' })\n        }\n      }\n    } else if (swapType === TOKEN_TO_TOKEN) {\n      const reserveETHFirst = inputReserveETH\n      const reserveTokenFirst = inputReserveToken\n\n      const reserveETHSecond = outputReserveETH\n      const reserveTokenSecond = outputReserveToken\n\n      if (amount && reserveETHFirst && reserveTokenFirst && reserveETHSecond && reserveTokenSecond) {\n        try {\n          if (independentField === INPUT) {\n            const intermediateValue = calculateEtherTokenOutputFromInput(amount, reserveTokenFirst, reserveETHFirst)\n            if (intermediateValue.lte(ethers.constants.Zero)) {\n              throw Error()\n            }\n            const calculatedDependentValue = calculateEtherTokenOutputFromInput(\n              intermediateValue,\n              reserveETHSecond,\n              reserveTokenSecond\n            )\n            if (calculatedDependentValue.lte(ethers.constants.Zero)) {\n              throw Error()\n            }\n            dispatchSwapState({ type: 'UPDATE_DEPENDENT', payload: calculatedDependentValue })\n          } else {\n            const intermediateValue = calculateEtherTokenInputFromOutput(amount, reserveETHSecond, reserveTokenSecond)\n            if (intermediateValue.lte(ethers.constants.Zero)) {\n              throw Error()\n            }\n            const calculatedDependentValue = calculateEtherTokenInputFromOutput(\n              intermediateValue,\n              reserveTokenFirst,\n              reserveETHFirst\n            )\n            if (calculatedDependentValue.lte(ethers.constants.Zero)) {\n              throw Error()\n            }\n            dispatchSwapState({ type: 'UPDATE_DEPENDENT', payload: calculatedDependentValue })\n          }\n        } catch {\n          setIndependentError(t('insufficientLiquidity'))\n        }\n        return () => {\n          dispatchSwapState({ type: 'UPDATE_DEPENDENT', payload: '' })\n        }\n      }\n    }\n  }, [\n    independentValueParsed,\n    swapType,\n    outputReserveETH,\n    outputReserveToken,\n    inputReserveETH,\n    inputReserveToken,\n    independentField,\n    t\n  ])\n\n  const [inverted, setInverted] = useState(false)\n  const exchangeRate = getExchangeRate(inputValueParsed, inputDecimals, outputValueParsed, outputDecimals)\n  const exchangeRateInverted = getExchangeRate(inputValueParsed, inputDecimals, outputValueParsed, outputDecimals, true)\n\n  const marketRate = getMarketRate(\n    swapType,\n    inputReserveETH,\n    inputReserveToken,\n    inputDecimals,\n    outputReserveETH,\n    outputReserveToken,\n    outputDecimals\n  )\n\n  const percentSlippage =\n    exchangeRate && marketRate\n      ? exchangeRate\n          .sub(marketRate)\n          .abs()\n          .mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18)))\n          .div(marketRate)\n          .sub(ethers.utils.bigNumberify(3).mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(15))))\n      : undefined\n  const percentSlippageFormatted = percentSlippage && amountFormatter(percentSlippage, 16, 2)\n  const slippageWarning =\n    percentSlippage &&\n    percentSlippage.gte(ethers.utils.parseEther('.05')) &&\n    percentSlippage.lt(ethers.utils.parseEther('.2')) // [5% - 20%)\n  const highSlippageWarning = percentSlippage && percentSlippage.gte(ethers.utils.parseEther('.2')) // [20+%\n\n  const isValid = sending\n    ? exchangeRate && inputError === null && independentError === null && recipientError === null\n    : exchangeRate && inputError === null && independentError === null\n\n  const estimatedText = `(${t('estimated')})`\n  function formatBalance(value) {\n    return `Balance: ${value}`\n  }\n\n  async function onSwap() {\n    const deadline = Math.ceil(Date.now() / 1000) + DEADLINE_FROM_NOW\n\n    let estimate, method, args, value\n    if (independentField === INPUT) {\n      ReactGA.event({\n        category: `${swapType}`,\n        action: sending ? 'TransferInput' : 'SwapInput'\n      })\n\n      if (swapType === ETH_TO_TOKEN) {\n        estimate = sending ? contract.estimate.ethToTokenTransferInput : contract.estimate.ethToTokenSwapInput\n        method = sending ? contract.ethToTokenTransferInput : contract.ethToTokenSwapInput\n        args = sending ? [dependentValueMinumum, deadline, recipient.address] : [dependentValueMinumum, deadline]\n        value = independentValueParsed\n      } else if (swapType === TOKEN_TO_ETH) {\n        estimate = sending ? contract.estimate.tokenToEthTransferInput : contract.estimate.tokenToEthSwapInput\n        method = sending ? contract.tokenToEthTransferInput : contract.tokenToEthSwapInput\n        args = sending\n          ? [independentValueParsed, dependentValueMinumum, deadline, recipient.address]\n          : [independentValueParsed, dependentValueMinumum, deadline]\n        value = ethers.constants.Zero\n      } else if (swapType === TOKEN_TO_TOKEN) {\n        estimate = sending ? contract.estimate.tokenToTokenTransferInput : contract.estimate.tokenToTokenSwapInput\n        method = sending ? contract.tokenToTokenTransferInput : contract.tokenToTokenSwapInput\n        args = sending\n          ? [\n              independentValueParsed,\n              dependentValueMinumum,\n              ethers.constants.One,\n              deadline,\n              recipient.address,\n              outputCurrency\n            ]\n          : [independentValueParsed, dependentValueMinumum, ethers.constants.One, deadline, outputCurrency]\n        value = ethers.constants.Zero\n      }\n    } else if (independentField === OUTPUT) {\n      ReactGA.event({\n        category: `${swapType}`,\n        action: sending ? 'TransferOutput' : 'SwapOutput'\n      })\n\n      if (swapType === ETH_TO_TOKEN) {\n        estimate = sending ? contract.estimate.ethToTokenTransferOutput : contract.estimate.ethToTokenSwapOutput\n        method = sending ? contract.ethToTokenTransferOutput : contract.ethToTokenSwapOutput\n        args = sending ? [independentValueParsed, deadline, recipient.address] : [independentValueParsed, deadline]\n        value = dependentValueMaximum\n      } else if (swapType === TOKEN_TO_ETH) {\n        estimate = sending ? contract.estimate.tokenToEthTransferOutput : contract.estimate.tokenToEthSwapOutput\n        method = sending ? contract.tokenToEthTransferOutput : contract.tokenToEthSwapOutput\n        args = sending\n          ? [independentValueParsed, dependentValueMaximum, deadline, recipient.address]\n          : [independentValueParsed, dependentValueMaximum, deadline]\n        value = ethers.constants.Zero\n      } else if (swapType === TOKEN_TO_TOKEN) {\n        estimate = sending ? contract.estimate.tokenToTokenTransferOutput : contract.estimate.tokenToTokenSwapOutput\n        method = sending ? contract.tokenToTokenTransferOutput : contract.tokenToTokenSwapOutput\n        args = sending\n          ? [\n              independentValueParsed,\n              dependentValueMaximum,\n              ethers.constants.MaxUint256,\n              deadline,\n              recipient.address,\n              outputCurrency\n            ]\n          : [independentValueParsed, dependentValueMaximum, ethers.constants.MaxUint256, deadline, outputCurrency]\n        value = ethers.constants.Zero\n      }\n    }\n\n    const estimatedGasLimit = await estimate(...args, { value })\n    method(...args, { value, gasLimit: calculateGasMargin(estimatedGasLimit, GAS_MARGIN) }).then(response => {\n      addTransaction(response)\n    })\n  }\n\n  const [customSlippageError, setcustomSlippageError] = useState('')\n\n  const allBalances = useFetchAllBalances()\n\n  return (\n    <>\n      <CurrencyInputPanel\n        title={t('input')}\n        allBalances={allBalances}\n        description={inputValueFormatted && independentField === OUTPUT ? estimatedText : ''}\n        extraText={inputBalanceFormatted && formatBalance(inputBalanceFormatted)}\n        extraTextClickHander={() => {\n          if (inputBalance && inputDecimals) {\n            const valueToSet = inputCurrency === 'ETH' ? inputBalance.sub(ethers.utils.parseEther('.1')) : inputBalance\n            if (valueToSet.gt(ethers.constants.Zero)) {\n              dispatchSwapState({\n                type: 'UPDATE_INDEPENDENT',\n                payload: { value: amountFormatter(valueToSet, inputDecimals, inputDecimals, false), field: INPUT }\n              })\n            }\n          }\n        }}\n        onCurrencySelected={inputCurrency => {\n          dispatchSwapState({ type: 'SELECT_CURRENCY', payload: { currency: inputCurrency, field: INPUT } })\n        }}\n        onValueChange={inputValue => {\n          dispatchSwapState({ type: 'UPDATE_INDEPENDENT', payload: { value: inputValue, field: INPUT } })\n        }}\n        showUnlock={showUnlock}\n        selectedTokens={[inputCurrency, outputCurrency]}\n        selectedTokenAddress={inputCurrency}\n        value={inputValueFormatted}\n        errorMessage={inputError ? inputError : independentField === INPUT ? independentError : ''}\n      />\n      <OversizedPanel>\n        <DownArrowBackground>\n          <DownArrow\n            onClick={() => {\n              dispatchSwapState({ type: 'FLIP_INDEPENDENT' })\n            }}\n            clickable\n            alt=\"swap\"\n            active={isValid}\n          />\n        </DownArrowBackground>\n      </OversizedPanel>\n      <CurrencyInputPanel\n        title={t('output')}\n        allBalances={allBalances}\n        description={outputValueFormatted && independentField === INPUT ? estimatedText : ''}\n        extraText={outputBalanceFormatted && formatBalance(outputBalanceFormatted)}\n        onCurrencySelected={outputCurrency => {\n          dispatchSwapState({ type: 'SELECT_CURRENCY', payload: { currency: outputCurrency, field: OUTPUT } })\n        }}\n        onValueChange={outputValue => {\n          dispatchSwapState({ type: 'UPDATE_INDEPENDENT', payload: { value: outputValue, field: OUTPUT } })\n        }}\n        selectedTokens={[inputCurrency, outputCurrency]}\n        selectedTokenAddress={outputCurrency}\n        value={outputValueFormatted}\n        errorMessage={independentField === OUTPUT ? independentError : ''}\n        disableUnlock\n      />\n      {sending ? (\n        <>\n          <OversizedPanel>\n            <DownArrowBackground>\n              <DownArrow active={isValid} alt=\"arrow\" />\n            </DownArrowBackground>\n          </OversizedPanel>\n          <AddressInputPanel onChange={setRecipient} onError={setRecipientError} />\n        </>\n      ) : (\n        ''\n      )}\n      <OversizedPanel hideBottom>\n        <ExchangeRateWrapper\n          onClick={() => {\n            setInverted(inverted => !inverted)\n          }}\n        >\n          <ExchangeRate>{t('exchangeRate')}</ExchangeRate>\n          {inverted ? (\n            <span>\n              {exchangeRate\n                ? `1 ${inputSymbol} = ${amountFormatter(exchangeRate, 18, 4, false)} ${outputSymbol}`\n                : ' - '}\n            </span>\n          ) : (\n            <span>\n              {exchangeRate\n                ? `1 ${outputSymbol} = ${amountFormatter(exchangeRateInverted, 18, 4, false)} ${inputSymbol}`\n                : ' - '}\n            </span>\n          )}\n        </ExchangeRateWrapper>\n      </OversizedPanel>\n      <TransactionDetails\n        account={account}\n        setRawSlippage={setRawSlippage}\n        setRawTokenSlippage={setRawTokenSlippage}\n        rawSlippage={rawSlippage}\n        slippageWarning={slippageWarning}\n        highSlippageWarning={highSlippageWarning}\n        inputError={inputError}\n        independentError={independentError}\n        inputCurrency={inputCurrency}\n        outputCurrency={outputCurrency}\n        independentValue={independentValue}\n        independentValueParsed={independentValueParsed}\n        independentField={independentField}\n        INPUT={INPUT}\n        inputValueParsed={inputValueParsed}\n        outputValueParsed={outputValueParsed}\n        inputSymbol={inputSymbol}\n        outputSymbol={outputSymbol}\n        dependentValueMinumum={dependentValueMinumum}\n        dependentValueMaximum={dependentValueMaximum}\n        dependentDecimals={dependentDecimals}\n        independentDecimals={independentDecimals}\n        percentSlippageFormatted={percentSlippageFormatted}\n        setcustomSlippageError={setcustomSlippageError}\n        recipientAddress={recipient.address}\n        sending={sending}\n      />\n      <Flex>\n        <Button\n          disabled={!isValid || customSlippageError === 'invalid'}\n          onClick={onSwap}\n          warning={highSlippageWarning || customSlippageError === 'warning'}\n        >\n          {sending\n            ? highSlippageWarning || customSlippageError === 'warning'\n              ? t('sendAnyway')\n              : t('send')\n            : highSlippageWarning || customSlippageError === 'warning'\n            ? t('swapAnyway')\n            : t('swap')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n","module.exports = __webpack_public_path__ + \"static/media/question.cc0a2451.svg\";"],"sourceRoot":""}