{"version":3,"sources":["pages/Pool/CreateExchange.js","components/AddressInputPanel/index.js"],"names":["SummaryPanel","styled","div","theme","flexColumnNoWrap","ExchangeRateWrapper","flexRowNoWrap","doveGray","ExchangeRate","span","CreateExchangeWrapper","SummaryText","error","salmonRed","Flex","withRouter","history","location","t","useTranslation","account","useWeb3Context","factory","useFactoryContract","useState","address","name","tokenAddress","setTokenAddress","tokenAddressError","setTokenAddressError","useTokenDetails","symbol","decimals","exchangeAddress","addTransaction","useTransactionAdder","useEffect","state","replace","pathname","errorMessage","setErrorMessage","a","estimate","createExchange","estimatedGasLimit","gasLimit","then","response","ReactGA","event","category","action","undefined","ethers","constants","AddressZero","isValid","title","initialInput","onChange","onError","hideBottom","disabled","onClick","InputPanel","transparentize","shadowColor","inputBackground","ContainerRow","mercuryGray","InputContainer","LabelRow","LabelContainer","InputRow","Input","input","royalBlue","placeholderGray","AddressInputPanel","library","setInput","debouncedInput","useDebounce","data","setData","setError","stale","isAddress","lookupAddress","catch","resolveName","type","autoComplete","autoCorrect","autoCapitalize","spellCheck","placeholder","target","value","checksummedInput"],"mappings":"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","file":"static/js/7.b64dcfd4.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router'\nimport { useWeb3Context } from 'web3-react'\nimport { ethers } from 'ethers'\nimport styled from 'styled-components'\nimport { useTranslation } from 'react-i18next'\nimport ReactGA from 'react-ga'\n\nimport { Button } from '../../theme'\nimport AddressInputPanel from '../../components/AddressInputPanel'\nimport OversizedPanel from '../../components/OversizedPanel'\nimport { useFactoryContract } from '../../hooks'\nimport { useTokenDetails } from '../../contexts/Tokens'\nimport { useTransactionAdder } from '../../contexts/Transactions'\n\nconst SummaryPanel = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap};\n  padding: 1rem 0;\n`\n\nconst ExchangeRateWrapper = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n  color: ${({ theme }) => theme.doveGray};\n  font-size: 0.75rem;\n  padding: 0.25rem 1rem 0;\n`\n\nconst ExchangeRate = styled.span`\n  flex: 1 1 auto;\n  width: 0;\n  color: ${({ theme }) => theme.doveGray};\n`\n\nconst CreateExchangeWrapper = styled.div`\n  color: ${({ theme }) => theme.doveGray};\n  text-align: center;\n  margin-top: 1rem;\n  padding-top: 1rem;\n`\n\nconst SummaryText = styled.div`\n  font-size: 0.75rem;\n  color: ${({ error, theme }) => error && theme.salmonRed};\n`\n\nconst Flex = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 2rem;\n\n  button {\n    max-width: 20rem;\n  }\n`\n\nfunction CreateExchange({ history, location }) {\n  const { t } = useTranslation()\n  const { account } = useWeb3Context()\n  const factory = useFactoryContract()\n\n  const [tokenAddress, setTokenAddress] = useState({\n    address: '',\n    name: ''\n  })\n  const [tokenAddressError, setTokenAddressError] = useState()\n\n  const { name, symbol, decimals, exchangeAddress } = useTokenDetails(tokenAddress.address)\n  const addTransaction = useTransactionAdder()\n\n  // clear location state, if it exists\n  useEffect(() => {\n    if (location.state) {\n      history.replace(location.pathname)\n    }\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  // validate everything\n  const [errorMessage, setErrorMessage] = useState(!account && t('noWallet'))\n  useEffect(() => {\n    if (tokenAddressError) {\n      setErrorMessage(t('invalidTokenAddress'))\n    } else if (symbol === undefined || decimals === undefined || exchangeAddress === undefined) {\n      setErrorMessage()\n    } else if (symbol === null) {\n      setErrorMessage(t('invalidSymbol'))\n    } else if (decimals === null) {\n      setErrorMessage(t('invalidDecimals'))\n    } else if (exchangeAddress !== ethers.constants.AddressZero) {\n      setErrorMessage(t('exchangeExists'))\n    } else if (!account) {\n      setErrorMessage(t('noWallet'))\n    } else {\n      setErrorMessage(null)\n    }\n\n    return () => {\n      setErrorMessage()\n    }\n  }, [tokenAddress.address, symbol, decimals, exchangeAddress, account, t, tokenAddressError])\n\n  async function createExchange() {\n    const estimatedGasLimit = await factory.estimate.createExchange(tokenAddress.address)\n\n    factory.createExchange(tokenAddress.address, { gasLimit: estimatedGasLimit }).then(response => {\n      ReactGA.event({\n        category: 'Pool',\n        action: 'CreateExchange'\n      })\n\n      addTransaction(response)\n    })\n  }\n\n  const isValid = errorMessage === null\n\n  return (\n    <>\n      <AddressInputPanel\n        title={t('tokenAddress')}\n        initialInput={(location.state && location.state.tokenAddress) || ''}\n        onChange={setTokenAddress}\n        onError={setTokenAddressError}\n      />\n      <OversizedPanel hideBottom>\n        <SummaryPanel>\n          <ExchangeRateWrapper>\n            <ExchangeRate>{t('name')}</ExchangeRate>\n            <span>{name ? name : ' - '}</span>\n          </ExchangeRateWrapper>\n          <ExchangeRateWrapper>\n            <ExchangeRate>{t('symbol')}</ExchangeRate>\n            <span>{symbol ? symbol : ' - '}</span>\n          </ExchangeRateWrapper>\n          <ExchangeRateWrapper>\n            <ExchangeRate>{t('decimals')}</ExchangeRate>\n            <span>{decimals || decimals === 0 ? decimals : ' - '}</span>\n          </ExchangeRateWrapper>\n        </SummaryPanel>\n      </OversizedPanel>\n      <CreateExchangeWrapper>\n        <SummaryText>{errorMessage ? errorMessage : t('enterTokenCont')}</SummaryText>\n      </CreateExchangeWrapper>\n      <Flex>\n        <Button disabled={!isValid} onClick={createExchange}>\n          {t('createExchange')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nexport default withRouter(CreateExchange)\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'react-i18next'\nimport { useWeb3Context } from 'web3-react'\nimport { transparentize } from 'polished'\n\nimport { isAddress } from '../../utils'\nimport { useDebounce } from '../../hooks'\n\nconst InputPanel = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap}\n  box-shadow: 0 4px 8px 0 ${({ theme }) => transparentize(0.95, theme.shadowColor)};\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.inputBackground};\n  z-index: 1;\n`\n\nconst ContainerRow = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? theme.salmonRed : theme.mercuryGray)};\n\n  background-color: ${({ theme }) => theme.inputBackground};\n`\n\nconst InputContainer = styled.div`\n  flex: 1;\n`\n\nconst LabelRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: center;\n  color: ${({ theme }) => theme.doveGray};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem;\n`\n\nconst LabelContainer = styled.div`\n  flex: 1 1 auto;\n  width: 0;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`\n\nconst InputRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: center;\n  padding: 0.25rem 0.85rem 0.75rem;\n`\n\nconst Input = styled.input`\n  font-size: 1rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  width: 0;\n  background-color: ${({ theme }) => theme.inputBackground};\n\n  color: ${({ error, theme }) => (error ? theme.salmonRed : theme.royalBlue)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  ::placeholder {\n    color: ${({ theme }) => theme.placeholderGray};\n  }\n`\n\nexport default function AddressInputPanel({ title, initialInput = '', onChange = () => {}, onError = () => {} }) {\n  const { t } = useTranslation()\n\n  const { library } = useWeb3Context()\n\n  const [input, setInput] = useState(initialInput)\n  const debouncedInput = useDebounce(input, 150)\n\n  const [data, setData] = useState({ address: undefined, name: undefined })\n  const [error, setError] = useState(false)\n\n  // keep data and errors in sync\n  useEffect(() => {\n    onChange({ address: data.address, name: data.name })\n  }, [onChange, data.address, data.name])\n  useEffect(() => {\n    onError(error)\n  }, [onError, error])\n\n  // run parser on debounced input\n  useEffect(() => {\n    let stale = false\n\n    if (isAddress(debouncedInput)) {\n      try {\n        library\n          .lookupAddress(debouncedInput)\n          .then(name => {\n            if (!stale) {\n              // if an ENS name exists, set it as the destination\n              if (name) {\n                setInput(name)\n              } else {\n                setData({ address: debouncedInput, name: '' })\n                setError(null)\n              }\n            }\n          })\n          .catch(() => {\n            if (!stale) {\n              setData({ address: debouncedInput, name: '' })\n              setError(null)\n            }\n          })\n      } catch {\n        setData({ address: debouncedInput, name: '' })\n        setError(null)\n      }\n    } else {\n      if (debouncedInput !== '') {\n        try {\n          library\n            .resolveName(debouncedInput)\n            .then(address => {\n              if (!stale) {\n                // if the debounced input name resolves to an address\n                if (address) {\n                  setData({ address: address, name: debouncedInput })\n                  setError(null)\n                } else {\n                  setError(true)\n                }\n              }\n            })\n            .catch(() => {\n              if (!stale) {\n                setError(true)\n              }\n            })\n        } catch {\n          setError(true)\n        }\n      }\n    }\n\n    return () => {\n      stale = true\n    }\n  }, [debouncedInput, library, onChange, onError])\n\n  function onInput(event) {\n    if (data.address !== undefined || data.name !== undefined) {\n      setData({ address: undefined, name: undefined })\n    }\n    if (error !== undefined) {\n      setError()\n    }\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setInput(checksummedInput || input)\n  }\n\n  return (\n    <InputPanel>\n      <ContainerRow error={input !== '' && error}>\n        <InputContainer>\n          <LabelRow>\n            <LabelContainer>\n              <span>{title || t('recipientAddress')}</span>\n            </LabelContainer>\n          </LabelRow>\n          <InputRow>\n            <Input\n              type=\"text\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              spellCheck=\"false\"\n              placeholder=\"0x1234...\"\n              error={input !== '' && error}\n              onChange={onInput}\n              value={input}\n            />\n          </InputRow>\n        </InputContainer>\n      </ContainerRow>\n    </InputPanel>\n  )\n}\n"],"sourceRoot":""}